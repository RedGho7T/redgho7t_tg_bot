package ru.redgho7t.telegrambot.service;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.EnableScheduling;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
 * –û–±–Ω–æ–≤–ª—è–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø—ã, –ø–æ–≥–æ–¥—É –∏ –∞–Ω–µ–∫–¥–æ—Ç—ã –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
 */
@Service
@EnableScheduling
public class DailyUpdateService {
    private static final Logger logger = LoggerFactory.getLogger(DailyUpdateService.class);

    @Autowired
    private HoroscopeService horoscopeService;

    @Autowired
    private WeatherService weatherService;

    @Autowired
    private JokeService jokeService;

    /**
     * –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –ø–æ–ª–Ω–æ—á—å
     * –û–±–Ω–æ–≤–ª—è–µ—Ç –≥–æ—Ä–æ—Å–∫–æ–ø—ã –∏ –∫—ç—à –ø–æ–≥–æ–¥—ã
     */
    @Scheduled(cron = "0 0 0 * * *") // –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 00:00
    public void dailyUpdate() {
        logger.info("üïõ –ù–∞—á–∏–Ω–∞–µ–º –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö");

        try {
            // –û–±–Ω–æ–≤–ª—è–µ–º –≥–æ—Ä–æ—Å–∫–æ–ø—ã –Ω–∞ –Ω–æ–≤—ã–π –¥–µ–Ω—å
            horoscopeService.updateAllHoroscopes();
            logger.info("‚úÖ –ì–æ—Ä–æ—Å–∫–æ–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã");

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç—à –ø–æ–≥–æ–¥—ã
            weatherService.updateWeatherCache();
            logger.info("‚úÖ –ö—ç—à –ø–æ–≥–æ–¥—ã –æ–±–Ω–æ–≤–ª—ë–Ω");

            logger.info("üéâ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ");

        } catch (Exception e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
     */
    @Scheduled(cron = "0 0 */6 * * *") // –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤ –≤ 00, 06, 12, 18
    public void updateJokes() {
        logger.info("üòÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤");

        try {
            jokeService.refreshJokeCache();
            logger.info("‚úÖ –ö—ç—à –∞–Ω–µ–∫–¥–æ—Ç–æ–≤ –æ–±–Ω–æ–≤–ª—ë–Ω");
        } catch (Exception e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∞–Ω–µ–∫–¥–æ—Ç–æ–≤: {}", e.getMessage(), e);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –ø–æ–≥–æ–¥—ã –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
     */
    @Scheduled(cron = "0 */30 * * * *") // –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
    public void updateWeatherCache() {
        logger.debug("üå§Ô∏è –ü–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –ø–æ–≥–æ–¥—ã");

        try {
            weatherService.updateWeatherCache();
            logger.debug("‚úÖ –ö—ç—à –ø–æ–≥–æ–¥—ã –æ–±–Ω–æ–≤–ª—ë–Ω");
        } catch (Exception e) {
            logger.warn("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—ç—à–∞ –ø–æ–≥–æ–¥—ã: {}", e.getMessage());
        }
    }

    /**
     * –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
     */
    @Scheduled(cron = "0 0 2 * * SUN") // –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 02:00
    public void weeklyCleanup() {
        logger.info("üßπ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö");

        try {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—á–∏—Å—Ç–∫—É –ª–æ–≥–æ–≤, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ —Ç.–¥.
            logger.info("‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞");
        } catch (Exception e) {
            logger.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–µ: {}", e.getMessage(), e);
        }
    }
}